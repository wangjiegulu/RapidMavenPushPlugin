apply plugin: 'com.android.library'

android {
    compileSdkVersion global_compileSdkVersion

    defaultConfig {
        minSdkVersion global_minSdkVersion
        targetSdkVersion global_targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
//            minifyEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.android.support:appcompat-v7:$global_supportVersion"
    testImplementation "junit:junit:$global_junitVersion"
    androidTestImplementation "com.android.support.test:runner:$global_runnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$global_espressoVersion"

}

//ext.RAPID_MAVEN_PUSH_TYPE=["hello", "world"]

//apply plugin: 'com.github.wangjiegulu.plg.rapidmavenpush'
import com.wangjiegulu.plg.rapidmavenpush.RapidMavenPushPlugin

apply plugin: RapidMavenPushPlugin

rapidMavenPush {
    printProperties = true
    abortOnError = false
    disable = false
    defaultMavenType = 'local'
    defaultVersionName = "0.1.2-2-SNAPSHOT"
    mavens {
        maven {
            mavenType = 'local'
            propertyFiles = [
                    file("mavenupload/maven_common.properties"),
                    file("mavenupload/maven_local.properties")
            ]
            propertyInjectMode = 'replace'
        }
        maven {
            mavenType = 'company'
            propertyFiles = [
                    file("mavenupload/maven_common.properties"),
                    file("mavenupload/maven_company.properties")
            ]
            propertyInjectMode = 'replace'
        }
        maven {
            mavenType = 'central'
            propertyFiles = [
                    file("mavenupload/maven_common.properties"),
                    file("mavenupload/maven_central.properties")
            ]
            propertyInjectMode = 'replace'
        }
    }
}

//apply plugin: 'com.github.wangjiegulu.plg.rapidmetainf'
//project.afterEvaluate {
//    // META-INF properties
//    RapidParameterParser rapidParameterParser = new RapidParameterParser(project)
//    rapidmetainf {
//        metaInfName 'depmodule.properties'
//        metaInfProperties "archiveName=${rapidParameterParser.getParameter('POM_ARCHIVE_ID', null)}"
//
//    }
//}
